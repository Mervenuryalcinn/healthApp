import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:health_app/screens/login_screen.dart';
import 'package:health_app/screens/register_screen.dart';
import 'package:health_app/screens/home_screen.dart';
import 'package:health_app/services/auth_service.dart';
import 'package:health_app/models/user.dart';
import 'services/storage_service.dart';

/// ğŸ”¹ Uygulama baÅŸlangÄ±Ã§ noktasÄ±
/// - Firebase ve StorageService baÅŸlatÄ±lÄ±r
/// - KullanÄ±cÄ±nÄ±n daha Ã¶nce giriÅŸ yapÄ±p yapmadÄ±ÄŸÄ± kontrol edilir
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  // Firebase baÅŸlat
  await Firebase.initializeApp();
  // StorageService singleton baÅŸlat
  final storageService = StorageService();
  await storageService.init();
  // UygulamayÄ± baÅŸlat
  runApp(HealthApp());
}
/// ğŸ”¹ HealthApp
/// - MaterialApp yapÄ±landÄ±rmasÄ± ve ana routing
/// - FutureBuilder ile mevcut kullanÄ±cÄ± kontrolÃ¼ yapÄ±lÄ±r
class HealthApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'SaÄŸlÄ±k UygulamasÄ±',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      /// ğŸ”¹ Ana ekran belirleme
      /// - KullanÄ±cÄ± daha Ã¶nce giriÅŸ yapmÄ±ÅŸsa HomeScreen'e yÃ¶nlendir
      /// - Aksi halde LoginScreen gÃ¶ster
      home: FutureBuilder<Map<String, dynamic>?>(
        future: AuthService.getUser(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.done) {
            if (snapshot.data != null && snapshot.data!['id'] != null) {
              // KullanÄ±cÄ± bilgisi mevcut
              AppUser user = AppUser.fromJson(snapshot.data!);
              return HomeScreen(user: user); // HomeScreen'e user nesnesi gÃ¶nderiliyor
            } else {
              // KullanÄ±cÄ± yoksa giriÅŸ ekranÄ±
              return LoginScreen();
            }
          }
          // Veri yÃ¼kleniyor ekranÄ±
          return Scaffold(
            body: Center(child: CircularProgressIndicator()),
          );
        },
      ),
      /// ğŸ”¹ Route tanÄ±mlarÄ±
      /// - Login ve Register ekranlarÄ± iÃ§in
      routes: {
        '/login': (context) => LoginScreen(),
        '/register': (context) => RegisterScreen(),
        // '/home' route opsiyonel, FutureBuilder ile kontrol saÄŸlanÄ±yor
      },
    );
  }
}
